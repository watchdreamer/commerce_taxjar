<?php

/**
 * @file
 * Provides module functionality.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info().
 */
function commerce_taxjar_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'commerce_store') {
    $fields['taxjar_address_mode'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('TaxJar Origin Address'))
      ->setDescription(t('To accurately calculate sales tax, TaxJar must know where an item is shipped from. Even if the order is not physically shipped (ie - delivered electronically), a physical address is required to calculate tax.'))
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayOptions('form', [
        'type' => 'options_select',
        'weight' => 0,
      ])
      ->setSetting('allowed_values', [
        'on_file' => t('Use address on file with TaxJar'),
        'store' => t('Use store address'),
      ])
      ->setDefaultValue(['store'])
      ->setRequired(TRUE)
      ->setCardinality(1);
    return $fields;
  }

  if ($entity_type->id() === 'commerce_product_variation') {

    $fields['taxjar_category_code'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('TaxJar Category Code'))
      ->setDescription(t('Tax code for the product'))
      ->setSetting('target_type', 'taxonomy_term')
      ->setSetting('handler', 'default:taxonomy_term')
      ->setSetting('handler_settings', [
        'target_bundles' => ['taxjar_categories'],
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayOptions('form', [
        'type' => 'entity_reference_autocomplete',
        'weight' => 5,
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'autocomplete_type' => 'tags',
          'placeholder' => '',
        ],
      ]);
    return $fields;
  }

  return [];
}
